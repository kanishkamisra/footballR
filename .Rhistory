geom_histogram(binwidth = .005) +
theme_fivethirtyeight()
batters %>%
filter(AB >= 500) %>%
ggplot(aes(avg)) +
geom_histogram(binwidth = .005) +
theme_fivethirtyeight()
library(ggthemes)
batters %>%
filter(AB >= 500) %>%
ggplot(aes(avg)) +
geom_histogram(binwidth = .005) +
theme_fivethirtyeight()
batters %>%
filter(AB >= 500) %>%
ggplot(aes(avg)) +
geom_histogram(binwidth = .005) +
theme_fivethirtyeight() +
scale_color_manual(values = c("#f1c40f", "#008fd5", "#ff2700", "#77ab43", "#9b59b6"))
batters %>%
filter(AB >= 500) %>%
ggplot(aes(avg), color = "blue") +
geom_histogram(binwidth = .005) +
theme_fivethirtyeight()
batters %>%
filter(AB >= 500) %>%
ggplot(aes(avg)) +
geom_histogram(binwidth = .005) +
theme_fivethirtyeight() +
ggtitle("Distribution of Batters' Batting Averages")
batters %>%
filter(AB >= 500) %>%
ggplot(aes(avg)) +
geom_histogram(binwidth = .005) +
# theme_fivethirtyeight() +
ggtitle("Distribution of Batters' Batting Averages")
batters %>%
filter(AB >= 500) %>%
ggplot(aes(avg)) +
geom_histogram(binwidth = .005) +
theme_fivethirtyeight() +
ggtitle("Distribution of Batters' Batting Averages")
batters %>%
filter(AB >= 500) %>%
ggplot(aes(avg)) +
geom_histogram(binwidth = .005, fill = "blue") +
theme_fivethirtyeight() +
ggtitle("Distribution of Batters' Batting Averages")
batters %>%
filter(AB >= 500) %>%
ggplot(aes(avg)) +
geom_histogram(binwidth = .005, fill = "#f1c40f") +
theme_fivethirtyeight() +
ggtitle("Distribution of Batters' Batting Averages")
batters %>%
filter(AB >= 500) %>%
ggplot(aes(avg)) +
geom_histogram(binwidth = .005, fill = "#008fd5") +
theme_fivethirtyeight() +
ggtitle("Distribution of Batters' Batting Averages")
batters %>%
filter(AB >= 500) %>%
ggplot(aes(avg)) +
geom_histogram(binwidth = .005, fill = "#ff2700") +
theme_fivethirtyeight() +
ggtitle("Distribution of Batters' Batting Averages")
batters %>%
filter(AB >= 500) %>%
ggplot(aes(avg)) +
geom_histogram(binwidth = .005, fill = "#77ab43") +
theme_fivethirtyeight() +
ggtitle("Distribution of Batters' Batting Averages")
batters %>%
filter(AB >= 500) %>%
ggplot(aes(avg)) +
geom_histogram(binwidth = .005, fill = "#9b59b6") +
theme_fivethirtyeight() +
ggtitle("Distribution of Batters' Batting Averages")
batters %>%
filter(AB >= 500) %>%
ggplot(aes(avg)) +
geom_histogram(binwidth = .005, fill = "#f1c40f") +
theme_fivethirtyeight() +
ggtitle("Distribution of Batters' Batting Averages")
batters %>%
filter(AB >= 500) %>%
ggplot(aes(avg)) +
geom_histogram(binwidth = .005, fill = "#30a2da") +
theme_fivethirtyeight() +
ggtitle("Distribution of Batters' Batting Averages")
batters %>%
filter(AB >= 500) %>%
ggplot(aes(avg)) +
geom_histogram(binwidth = .005, fill = blue) +
theme_fivethirtyeight() +
ggtitle("Distribution of Batters' Batting Averages")
yellow <- "#f1c40f"
blue <- "#008fd5"
red <- "#ff2700"
green <- "#77ab43"
purple <- "#9b59b6"
batters %>%
filter(AB >= 500) %>%
ggplot(aes(avg)) +
geom_histogram(binwidth = .005, fill = blue) +
theme_fivethirtyeight() +
ggtitle("Distribution of Batters' Batting Averages")
blue <- "#30a2da"
batters %>%
filter(AB >= 500) %>%
ggplot(aes(avg)) +
geom_histogram(binwidth = .005, fill = blue) +
theme_fivethirtyeight() +
ggtitle("Distribution of Batters' Batting Averages")
batters %>%
filter(AB >= 500) %>%
ggplot(aes(avg)) +
geom_histogram(binwidth = .005, fill = red) +
theme_fivethirtyeight() +
ggtitle("Distribution of Batters' Batting Averages")
red <- "#fc4f30"
blue <- "#30a2da"
batters %>%
filter(AB >= 500) %>%
ggplot(aes(avg)) +
geom_histogram(binwidth = .005, fill = red) +
theme_fivethirtyeight() +
ggtitle("Distribution of Batters' Batting Averages")
batters %>%
filter(AB >= 500) %>%
ggplot(aes(avg)) +
geom_histogram(binwidth = .005, fill = green) +
theme_fivethirtyeight() +
ggtitle("Distribution of Batters' Batting Averages")
batters %>%
filter(AB >= 500) %>%
ggplot(aes(avg)) +
geom_histogram(binwidth = .005, fill = yellow) +
theme_fivethirtyeight() +
ggtitle("Distribution of Batters' Batting Averages")
library(statsr)
library(dplyr)
library(ggplot2)
library(shiny)
load("C:/Users/Kanishka/footballR/.RData")
rm(batters)
ls
View(goals)
View(goals)
scorers <- goals %>%
select(scorer, subtype, elapsed)
scorers <- goals %>%
select(scorer, subtype, elapsed)
library(dplyr)
scorers <- goals %>%
select(scorer, subtype, elapsed)
assisters <- goals %>%
select(assister, subtype)
assisters <- goals %>%
select(assister, subtype, elapsed)
View(scorers)
scorers <- scorers %>%
group_by(scorer, subtype)
View(scorers)
scorers <- scorers %>%
group_by(scorer, subtype) %>%
summarise(goals = count(n))
scorers <- scorers %>%
group_by(scorer, subtype) %>%
summarise(goals = n())
View(matches)
mean(c(9,10,11))
mean
help
help(mean)
help
matches <- tbl_df(dbGetQuery(con,
"SELECT m.id,
m.season,
m.date,
t1.team_long_name as 'home',
t1.team_short_name as 'home_short',
t2.team_long_name as 'away',
t2.team_short_name as 'away_short',
m.home_team_goal as 'home_goal',
m.away_team_goal as 'away_goal',
m.goal,
m.shoton,
m.shotoff,
m.foulcommit,
m.card,
m.cross,
m.corner,
m.possession
FROM Match m
inner join Team t1 on
m.home_team_api_id = t1.team_api_id
inner join Team t2 on
m.away_team_api_id = t2.team_api_id
WHERE league_id = 1729"
))
matches <- tbl_df(dbGetQuery(con,
"SELECT m.id,
m.season,
m.date,
t1.team_long_name as 'home',
t1.team_short_name as 'home_short',
t2.team_long_name as 'away',
t2.team_short_name as 'away_short',
m.home_team_goal as 'home_goal',
m.away_team_goal as 'away_goal',
m.goal,
m.shoton,
m.shotoff,
m.foulcommit,
m.card,
m.cross,
m.corner,
m.possession
FROM Match m
inner join Team t1 on
m.home_team_api_id = t1.team_api_id
inner join Team t2 on
m.away_team_api_id = t2.team_api_id
WHERE league_id = 1729"
))
dbListTables(con)
con <- dbConnect(SQLite(), dbname="database.sqlite")
dbListTables(con)
con <- dbConnect(SQLite(), dbname="database.sqlite")
dbListTables(con)
library(RSQLite)
con <- dbConnect(SQLite(), dbname="database.sqlite")
dbListTables(con)
getwd()
setwd(C:/Users/Kanishka/footballR)
setwd(C:\Users\Kanishka\footballR)
setwd("C:\Users\Kanishka\footballR")
setwd("C:/Users/Kanishka/footballR")
getwd()
con <- dbConnect(SQLite(), dbname="database.sqlite")
dbListTables(con)
matches <- tbl_df(dbGetQuery(con,
"SELECT m.id,
m.season,
m.date,
t1.team_long_name as 'home',
t1.team_short_name as 'home_short',
t2.team_long_name as 'away',
t2.team_short_name as 'away_short',
m.home_team_goal as 'home_goal',
m.away_team_goal as 'away_goal',
m.goal,
m.shoton,
m.shotoff,
m.foulcommit,
m.card,
m.cross,
m.corner,
m.possession
FROM Match m
inner join Team t1 on
m.home_team_api_id = t1.team_api_id
inner join Team t2 on
m.away_team_api_id = t2.team_api_id
WHERE league_id = 1729"
))
matches <- matches %>%
mutate(result = ifelse(home_goal > away_goal, "home",
ifelse (away_goal > home_goal, "away",
ifelse(home_goal == away_goal, "draw", "NA"))))
data.frame(comment = NA, subtype = NA, elapsed = NA, player1 = NA, player2 = NA, matchid = NA, season = NA)
for (match in matches) {
for (goal in match$goal){
add <- tryCatch({
xmlToDataFrame(goal) %>%
dplyr::select(comment, subtype, elapsed, player1, player2) %>%
mutate(matchid = id, season = season)
}, error = function(e) {
data.frame(comment = NA, subtype = NA, elapsed = NA, player1 = NA, player2 = NA, matchid = NA, season = NA)
})
goals <- rbind(goals, add)
}
}
for (goal in as.data.frame(match$goal)){
add <- tryCatch({
xmlToDataFrame(goal) %>%
dplyr::select(comment, subtype, elapsed, player1, player2) %>%
mutate(matchid = id, season = season)
}, error = function(e) {
data.frame(comment = NA, subtype = NA, elapsed = NA, player1 = NA, player2 = NA, matchid = NA, season = NA)
})
goals <- rbind(goals, add)
}
for (goal in as.data.frame(match$goal)){
add <- tryCatch({
xmlToDataFrame(goal) %>%
dplyr::select(comment, subtype, elapsed, player1, player2) %>%
mutate(matchid = id, season = season)
}, error = function(e) {
data.frame(comment = NA, subtype = NA, elapsed = NA, player1 = NA, player2 = NA, matchid = NA, season = NA)
})
goals <- rbind(goals, add)
}
View(matches$goal)
View(as.data.frame(matches$goal))
xmlToDataFrame(goal) %>%
dplyr::select(comment, subtype, elapsed, player1, player2) %>%
mutate(matchid = id, season = season)
for (match in matches) {
for (goal in as.data.frame(match$goal)){
add <- tryCatch({
xmlToDataFrame(goal) %>%
dplyr::select(comment, subtype, elapsed, player1, player2) %>%
mutate(matchid = id, season = season)
}, error = function(e) {
data.frame(comment = NA, subtype = NA, elapsed = NA, player1 = NA, player2 = NA, matchid = NA, season = NA)
})
goals <- rbind(goals, add)
}
}
library(XML)
for (match in matches) {
for (goal in as.data.frame(match$goal)){
add <- tryCatch({
xmlToDataFrame(goal) %>%
dplyr::select(comment, subtype, elapsed, player1, player2) %>%
mutate(matchid = id, season = season)
}, error = function(e) {
data.frame(comment = NA, subtype = NA, elapsed = NA, player1 = NA, player2 = NA, matchid = NA, season = NA)
})
goals <- rbind(goals, add)
}
}
for (as.data.frame(match) in matches) {
for (goal in as.data.frame(match$goal)){
add <- tryCatch({
xmlToDataFrame(goal) %>%
dplyr::select(comment, subtype, elapsed, player1, player2) %>%
mutate(matchid = id, season = season)
}, error = function(e) {
data.frame(comment = NA, subtype = NA, elapsed = NA, player1 = NA, player2 = NA, matchid = NA, season = NA)
})
goals <- rbind(goals, add)
}
}
xmlToDataFrame(goal) %>%
dplyr::select(comment, subtype, elapsed, player1, player2) %>%
mutate(matchid = id, season = season)
xmlToDataFrame(goal) %>%
dplyr::select(comment, subtype, elapsed, player1, player2) %>%
mutate(matchid = id, season = season)
for (match in matches){
match <- as.data.frame(match)
for (goal in as.data.frame(match$goal)){
add <- tryCatch({
xmlToDataFrame(goal) %>%
dplyr::select(comment, subtype, elapsed, player1, player2) %>%
mutate(matchid = id, season = season)
}, error = function(e) {
data.frame(comment = NA, subtype = NA, elapsed = NA, player1 = NA, player2 = NA, matchid = NA, season = NA)
})
goals <- rbind(goals, add)
}
}
goals = data.frame()
data.frame(comment = NA, subtype = NA, elapsed = NA, player1 = NA, player2 = NA, matchid = NA, season = NA)
for (match in matches){
match <- as.data.frame(match)
for (goal in as.data.frame(match$goal)){
add <- tryCatch({
xmlToDataFrame(goal) %>%
dplyr::select(comment, subtype, elapsed, player1, player2) %>%
mutate(matchid = id, season = season)
}, error = function(e) {
data.frame(comment = NA, subtype = NA, elapsed = NA, player1 = NA, player2 = NA, matchid = NA, season = NA)
})
goals <- rbind(goals, add)
}
}
View(goals)
print(ncol(match))
for (match in matches){
match <- as.data.frame(match)
print(ncol(match))
for (goal in as.data.frame(match$goal)){
add <- tryCatch({
xmlToDataFrame(goal) %>%
dplyr::select(comment, subtype, elapsed, player1, player2) %>%
mutate(matchid = id, season = season)
}, error = function(e) {
data.frame(comment = NA, subtype = NA, elapsed = NA, player1 = NA, player2 = NA, matchid = NA, season = NA)
})
goals <- rbind(goals, add)
}
}
View(match)
print(nrow(match))
print(nrow(match))
for (match in matches){
print(nrow(match))
}
print(class(match))
for (match in matches){
print(class(match))
}
matches[,c(id)]
matches[c(id),]
matches[c("id"),]
for (match in matches[c("id", "season", "goal")]){
print(class(match))
}
for (match in as.data.frame(matches[c("id", "season", "goal")]){
print(class(match))
}
for (match in as.data.frame(matches[c("id", "season", "goal")]){
print(class(match))
}
for (match in matches[c("id", "season", "goal")]){
print(class(match))
}
print(match)
print(match$goal)
for (match in matches[c("id", "season", "goal")]){
print(match$goal)
}
print(as.data.frame(match$goal))
for (match in matches[c("id", "season", "goal")]){
print(as.data.frame(match$goal))
}
print(match)
for (match in matches[c("id", "season", "goal")]){
print(match)
}
print(match$goal)
print(as.data.frame(match)$goal)
for (match in matches[c("id", "season", "goal")]){
print(as.data.frame(match)$goal)
}
print(match$goal)
for (match in matches[c("id", "season", "goal")]){
match <- as.data.frame(match)
print(match$goal)
}
View(match)
xmlToDataFrame(goal) %>%
dplyr::select(comment, subtype, elapsed, player1, player2) %>%
mutate(matchid = id, season = season)
for (match in matches){
for (goal in as.data.frame(match$goal)){
add <- tryCatch({
xmlToDataFrame(goal) %>%
dplyr::select(comment, subtype, elapsed, player1, player2) %>%
mutate(matchid = id, season = season)
}, error = function(e) {
data.frame(comment = NA, subtype = NA, elapsed = NA, player1 = NA, player2 = NA, matchid = NA, season = NA)
})
goals <- rbind(goals, add)
}
}
for (match in matches){
match <- as.data.frame(match)
for (goal in match$goal){
add <- tryCatch({
xmlToDataFrame(goal) %>%
dplyr::select(comment, subtype, elapsed, player1, player2) %>%
mutate(matchid = id, season = season)
}, error = function(e) {
data.frame(comment = NA, subtype = NA, elapsed = NA, player1 = NA, player2 = NA, matchid = NA, season = NA)
})
goals <- rbind(goals, add)
}
}
goals = data.frame()
for (row in matches[c("id", "season", "goal"),]) {
add <- tryCatch({
xmlToDataFrame(row$goal) %>%
dplyr::select(comment, subtype, elapsed, player1, player2) %>%
mutate(matchid = id, season = season)
}, error = function(e) {
data.frame(comment = NA, subtype = NA, elapsed = NA, player1 = NA, player2 = NA, matchid = NA, season = NA)
})
goals <- rbind(goals, add)
rm(add)
}
View(goals)
class(matches)
goals <- data.frame()
install.packages("data.table")
library(data.table)
goal_dt <- data.table(goals)
class(goal_dt)
goal_dt %>%
head()
rm(match, goal_dt)
rm(goal)
match_dt <- data.table(matches)
match_dt <- match_dt %>%
select(id, season, goal)
goals_dt <- match_dt[, list(goal = unlist(xmlToDataFrame(goal) %>%
dplyr::select(comment, subtype, elapsed, player1, player2))), by = c("id", "season")]
View(match_dt)
library(tidyr)
unnest(match_dt, xmlToDataFrame(goal) %>%
dplyr::select(comment, subtype, elapsed, player1, player2))
unnest(match_dt, xmlToDataFrame(goal) %>% dplyr::select(comment, subtype, elapsed, player1, player2))
unnest(match_dt, xmlToDataFrame(goal))
unnest(match_dt, goal))
unnest(match_dt, goal)
View(unnest(match_dt, goal))
goals_dt <- match_dt[, list(goal = unlist(xmlToDataFrame(goal) %>% dplyr::select(comment, subtype, elapsed, player1, player2))), by = list(id, season)]
View(scorers)
