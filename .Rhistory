install.packages("tidyverse")
install.packages("Lahman")
install.packages(ggplot2)
install.packages("ggplot2")
install.packages("gganimate")
install.packages("tidytext")
install.packages("dplyr")
install.packages("RSQLite")
getwd()
install.packages("XML")
library(dplyr)
library(RSQLite)
library(XML)
library(data.table)
install.packages("data.table")
library(dplyr)
library(RSQLite)
library(XML)
library(data.table)
library(tidyr)
con <- dbConnect(SQLite(), dbname="database.sqlite")
dbListTables(con)
getwd()
setwd("/Users/kanishka/footballR/")
getwd()
con <- dbConnect(SQLite(), dbname="database.sqlite")
dbListTables(con)
matches <- tbl_df(dbGetQuery(con,
"SELECT m.id,
m.season,
m.date,
t1.team_long_name as 'home',
t1.team_short_name as 'home_short',
t2.team_long_name as 'away',
t2.team_short_name as 'away_short',
m.home_team_goal as 'home_goal',
m.away_team_goal as 'away_goal',
m.goal,
m.shoton,
m.shotoff,
m.foulcommit,
m.card,
m.cross,
m.corner,
m.possession
FROM Match m
inner join Team t1 on
m.home_team_api_id = t1.team_api_id
inner join Team t2 on
m.away_team_api_id = t2.team_api_id
WHERE league_id = 1729"
))
matches <- matches %>%
mutate(result = ifelse(home_goal > away_goal, "home",
ifelse (away_goal > home_goal, "away",
ifelse(home_goal == away_goal, "draw", "NA"))))
playername <- function(x) {
return(lapply(x, function(x) {
if(!is.na(x)) {
return(as.character(dbGetQuery(con,paste("SELECT player_name FROM Player WHERE player_api_id = ", x))))
}
else {
return(NA)
}
}))
}
View(matches)
matches <- matches %>%
select(id, season, goal) %>%
mutate(comment = xmlToDataFrame(goal) %>% select(comment),
subtype = xmlToDataFrame(goal) %>% select(subtype),
elapsed = xmlToDataFrame(goal) %>% select(elapsed),
player1 = xmlToDataFrame(goal) %>% select(player1),
player2 = xmlToDataFrame(goal) %>% select(player2))
matches <- matches %>%
select(id, season, goal) %>%
mutate(comment = xmlToDataFrame(goal)$comment,
subtype = xmlToDataFrame(goal)$subtype,
elapsed = xmlToDataFrame(goal)$elapsed,
player1 = xmlToDataFrame(goal)$player1,
player2 = xmlToDataFrame(goal)$player2)
matches <- matches %>%
select(id, season, goal) %>%
mutate(comment = xmlToDataFrame(goal) %>% select(comment),
subtype = xmlToDataFrame(goal) %>% select(subtype),
elapsed = xmlToDataFrame(goal) %>% select(elapsed),
player1 = xmlToDataFrame(goal) %>% select(player1),
player2 = xmlToDataFrame(goal) %>% select(player2))
xmlToDataFrame(match$goal)
goals <- data.frame()
for (goal in matches$goal) {
rbind(goals, xmlToDataFrame(goal))
}
matches$goal[1,]
matches$goal[1]
xmlToDataFrame(matches$goal[1])
xmlToDataFrame(matches$goal[1])
xmlToDataFrame(matches$goal[1]) %>% select(comment)
matches <- matches %>%
select(id, season, goal) %>%
mutate(comment = xmlToDataFrame(goal) %>% select(comment))
matches$id[matches$id == 1729 ]
matches$id[matches$id == 1729]
matches$id[matches$id > 1729]
xmlToDataFrame(matches$goal[1]) %>% select(comment)
xmlToDataFrame(matches$goal[1])
xmlToList(matches%goal[1])
xmlToList(matches$goal[1])
xmlToList(matches$goal[1])$value$comment
xmlToList(matches$goal[1])$value$comment
xmlToList(matches$goal[1])$value$comment[1]
xmlToList(matches$goal[1])$value$comment[2]
xmlToList(matches$goal[1])$value$player1
xmlToList(matches$goal[1])$value$player1
xmlToList(matches$goal[1])$value$player1
xmlToList(matches$goal[1])$value$player1
xmlToList(matches$goal[1])
for (value in xmlToDataFrame(matches$goal[1])) {}
for (value in xmlToDataFrame(matches$goal[1])) {
value
}
for (value in xmlToDataFrame(matches$goal[1])) {
print(value)
}
print(value$comment)
for (value in xmlToDataFrame(matches$goal[1])) {
print(value$comment)
}
value = list()
values = list()
for (value in xmlToDataFrame(matches$goal[1])) {
map(values, values, value)
}
for (value in xmlToDataFrame(matches$goal[1])) {
Map(values, values, value)
}
v = list()
rm(values)
for (value in xmlToDataFrame(matches$goal[1])) {
Map(v, v, value)
}
v = list(v, value)
v = list()
for (value in xmlToDataFrame(matches$goal[1])) {
v = list(v, value)
}
v
v = list()
v
for (value in xmlToDataFrame(matches$goal[1])) {
v = list(v, value)
}
v
v = list()
Counter <- 0
Result <- list(NULL)
Size <- 1
AddItemDoubling <- function(item)
{
if( .GlobalEnv$Counter == .GlobalEnv$Size )
{
length(.GlobalEnv$Result) <- .GlobalEnv$Size <- .GlobalEnv$Size * 2
}
.GlobalEnv$Counter <- .GlobalEnv$Counter + 1
.GlobalEnv$Result[[.GlobalEnv$Counter]] <- item
}
v = list()
for (value in xmlToDataFrame(matches$goal[1])) {
v = AddItemDoubling(value)
}
v
rm(AddItemDoubling(), Counter, Size, Result)
rm(c(AddItemDoubling(), Counter, Size, Result))
rm(AddItemDoubling())
rm(c(AddItemDoubling, Counter, Size, Result))
rm(AddItemDoubling())
rm(AddItemDoubling
)
rm(Counter, Result)
rm(size)
rm(Size)
v = list()
for (value in xmlToDataFrame(matches$goal[1])) {
v = list(v, list(value))
}
v
v[1]
for (value in xmlToDataFrame(matches$goal[1])) {
print(value$comment)
}
print(value$comment)
for (value in xmlToDataFrame(matches$goal[1])) {
print(value$comment)
}
for (value in xmlToDataFrame(matches$goal[1])) {
print(value)
}
for (value in xmlToDataFrame(matches$goal[1])) {
print(value[1])
}
for (value in xmlToDataFrame(matches$goal[1])) {
print(value[1][1])
}
xmlToList(matches$goal[1]).attrs
xmlToList(matches$goal[1])
test <- xmlToList(matches$goal[1])
tets
test
as.data.frame(test)
View(as.data.frame(test))
v = list()
for (value in xmlToDataFrame(matches$goal[1])) {
print(class(value))
}
factor(c("a", "a", "b"))
v = as.data.frame()
v = data_frame()
for (value in xmlToDataFrame(matches$goal[1])) {
v <- rbind(v, values)
}
for (value in xmlToDataFrame(matches$goal[1])) {
v <- rbind(v, value)
}
View(v)
v = data_frame()
for (value in xmlToDataFrame(matches$goal[1])) {
v <- cbind(v, value)
}
v <- lbind(v, value)
v = data_frame()
for (value in xmlToDataFrame(matches$goal[1])) {
v <- rbind(v, value)
}
v = list()
for (value in xmlToDataFrame(matches$goal[1])) {
v <- rbind(v, value)
}
View(v)
rm(v)
v = list()
for (value in xmlToDataFrame(matches$goal[1])) {
v <- rbind(v, value)
}
View(v)
v = data_frame()
v = data_frame()
for (value in xmlToDataFrame(matches$goal[1])) {
value <- as.data.frame(value)
v <- rbind(v, value)
}
View(v)
v = list()
value <- as.list(value)
for (value in xmlToDataFrame(matches$goal[1])) {
value <- as.list(value)
v <- list(v, value)
}
v
v = list()
for (value in xmlToDataFrame(matches$goal[1])) {
value <- as.list(value)
v <- rbind(v, value)
}
View(v)
list(xmlToDataFrame(matches$goal[1]))
list(xmlToDataFrame(matches$goal[1]) %>% select(comment))
matches <- matches %>%
select(id, season, goal) %>%
mutate(comment = list(xmlToDataFrame(goal) %>% select(comment)))
list(xmlToDataFrame(matches$goal[1]) %>% select(comment))
v <- list(xmlToDataFrame(matches$goal[1]) %>% select(comment))
v
v$comment
v[1]
v[2]
v <- list(xmlToDataFrame(matches$goal[1])$comment)
v
v[1]
v[1][1]
v[1][1][1]
v[[1]]
v <- list(xmlToDataFrame(matches$goal[1])$comment)[[1]]
v
matches <- matches %>%
select(id, season, goal) %>%
mutate(comment = list(xmlToDataFrame(goal)$comment)[[1]])
u <- list(xmlToDataFrame(matches$goal[1]) %>% select(comment))
u
u[[1]]
u[[1]][1]
u[[1]][[1]]
u <- list(xmlToDataFrame(matches$goal[1]) %>% select(comment))[[1]][[1]]
u
matches <- matches %>%
select(id, season, goal) %>%
mutate(comment = list(xmlToDataFrame(goal) %>% select(comment))[[1]][[1]])
